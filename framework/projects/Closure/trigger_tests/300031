--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testSimpleForIn
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;var b;var x;a in b}
Result: function _func(){var a;var b;var x=a in b;x}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME b 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME x 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    IN 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        NAME b 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME b 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                        IN 1 [source_file: testcode]
                            NAME a 1 [source_file: testcode]
                            NAME b 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]


Subtree1: NAME x 1 [source_file: expected0]


Subtree2: NAME x 1 [source_file: testcode]
    IN 1 [source_file: testcode]
        NAME a 1 [source_file: testcode]
        NAME b 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testSimpleForIn(FlowSensitiveInlineVariablesTest.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testShadowedVariableInnerFunction
junit.framework.AssertionFailedError: 
Expected: function _func(){var x;print(1)||function(){var x$$1;print(1)}()}
Result: function _func(){var x=1;print(x)||function(){var x$$1;x$$1=1;print(x$$1)}()}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME x 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    OR 1 [source_file: expected0]
                        CALL 1 [free_call: 1] [source_file: expected0]
                            NAME print 1 [source_file: expected0]
                            NUMBER 1.0 1 [source_file: expected0]
                        CALL 1 [free_call: 1] [source_file: expected0]
                            FUNCTION  1 [source_file: expected0]
                                NAME  1 [source_file: expected0]
                                PARAM_LIST 1 [source_file: expected0]
                                BLOCK 1 [source_file: expected0]
                                    VAR 1 [source_file: expected0]
                                        NAME x$$1 1 [source_file: expected0]
                                    EXPR_RESULT 1 [source_file: expected0]
                                        CALL 1 [free_call: 1] [source_file: expected0]
                                            NAME print 1 [source_file: expected0]
                                            NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                        NUMBER 1.0 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    OR 1 [source_file: testcode]
                        CALL 1 [free_call: 1] [source_file: testcode]
                            NAME print 1 [source_file: testcode]
                            NAME x 1 [source_file: testcode]
                        CALL 1 [free_call: 1] [source_file: testcode]
                            FUNCTION  1 [source_file: testcode]
                                NAME  1 [source_file: testcode]
                                PARAM_LIST 1 [source_file: testcode]
                                BLOCK 1 [source_file: testcode]
                                    VAR 1 [source_file: testcode]
                                        NAME x$$1 1 [source_file: testcode]
                                    EXPR_RESULT 1 [source_file: testcode]
                                        ASSIGN 1 [source_file: testcode]
                                            NAME x$$1 1 [source_file: testcode]
                                            NUMBER 1.0 1 [source_file: testcode]
                                    EXPR_RESULT 1 [source_file: testcode]
                                        CALL 1 [free_call: 1] [source_file: testcode]
                                            NAME print 1 [source_file: testcode]
                                            NAME x$$1 1 [source_file: testcode]


Subtree1: NAME x 1 [source_file: expected0]


Subtree2: NAME x 1 [source_file: testcode]
    NUMBER 1.0 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testShadowedVariableInnerFunction(FlowSensitiveInlineVariablesTest.java:319)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testSimpleVar
junit.framework.AssertionFailedError: 
Expected: function _func(){var x;print(1)}
Result: function _func(){var x=1;print(x)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME x 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME print 1 [source_file: expected0]
                        NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                        NUMBER 1.0 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME print 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]


Subtree1: NAME x 1 [source_file: expected0]


Subtree2: NAME x 1 [source_file: testcode]
    NUMBER 1.0 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testSimpleVar(FlowSensitiveInlineVariablesTest.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testSwitchCase
junit.framework.AssertionFailedError: 
Expected: function _func(){var x;switch(1){}}
Result: function _func(){var x=1;switch(x){}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME x 1 [source_file: expected0]
                SWITCH 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                        NUMBER 1.0 1 [source_file: testcode]
                SWITCH 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]


Subtree1: NAME x 1 [source_file: expected0]


Subtree2: NAME x 1 [source_file: testcode]
    NUMBER 1.0 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testSwitchCase(FlowSensitiveInlineVariablesTest.java:315)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineGetProp3
junit.framework.AssertionFailedError: 
Expected: function _func(){var x;print(function(){1*a.b.c})}
Result: function _func(){var x=function(){1*a.b.c};print(x)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME x 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME print 1 [source_file: expected0]
                        FUNCTION  1 [source_file: expected0]
                            NAME  1 [source_file: expected0]
                            PARAM_LIST 1 [source_file: expected0]
                            BLOCK 1 [source_file: expected0]
                                EXPR_RESULT 1 [source_file: expected0]
                                    MUL 1 [source_file: expected0]
                                        NUMBER 1.0 1 [source_file: expected0]
                                        GETPROP 1 [source_file: expected0]
                                            GETPROP 1 [source_file: expected0]
                                                NAME a 1 [source_file: expected0]
                                                STRING b 1 [source_file: expected0]
                                            STRING c 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                        FUNCTION  1 [source_file: testcode]
                            NAME  1 [source_file: testcode]
                            PARAM_LIST 1 [source_file: testcode]
                            BLOCK 1 [source_file: testcode]
                                EXPR_RESULT 1 [source_file: testcode]
                                    MUL 1 [source_file: testcode]
                                        NUMBER 1.0 1 [source_file: testcode]
                                        GETPROP 1 [source_file: testcode]
                                            GETPROP 1 [source_file: testcode]
                                                NAME a 1 [source_file: testcode]
                                                STRING b 1 [source_file: testcode]
                                            STRING c 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME print 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]


Subtree1: NAME x 1 [source_file: expected0]


Subtree2: NAME x 1 [source_file: testcode]
    FUNCTION  1 [source_file: testcode]
        NAME  1 [source_file: testcode]
        PARAM_LIST 1 [source_file: testcode]
        BLOCK 1 [source_file: testcode]
            EXPR_RESULT 1 [source_file: testcode]
                MUL 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        GETPROP 1 [source_file: testcode]
                            NAME a 1 [source_file: testcode]
                            STRING b 1 [source_file: testcode]
                        STRING c 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testNoInlineGetProp3(FlowSensitiveInlineVariablesTest.java:339)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineIfNameIsLeftSideOfAssign
junit.framework.AssertionFailedError: 
Expected: function _func(){var x;x=print(1)+1}
Result: function _func(){var x=1;x=print(x)+1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME x 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        NAME x 1 [source_file: expected0]
                        ADD 1 [source_file: expected0]
                            CALL 1 [free_call: 1] [source_file: expected0]
                                NAME print 1 [source_file: expected0]
                                NUMBER 1.0 1 [source_file: expected0]
                            NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                        NUMBER 1.0 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                        ADD 1 [source_file: testcode]
                            CALL 1 [free_call: 1] [source_file: testcode]
                                NAME print 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                            NUMBER 1.0 1 [source_file: testcode]


Subtree1: NAME x 1 [source_file: expected0]


Subtree2: NAME x 1 [source_file: testcode]
    NUMBER 1.0 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testInlineIfNameIsLeftSideOfAssign(FlowSensitiveInlineVariablesTest.java:438)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testSimpleAssign
junit.framework.AssertionFailedError: 
Expected: function _func(){var x;print(1)}
Result: function _func(){var x;x=1;print(x)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME x 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME print 1 [source_file: expected0]
                        NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                        NUMBER 1.0 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME print 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME x 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [free_call: 1] [source_file: expected0]
            NAME print 1 [source_file: expected0]
            NUMBER 1.0 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    VAR 1 [source_file: testcode]
        NAME x 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]
            NUMBER 1.0 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        CALL 1 [free_call: 1] [source_file: testcode]
            NAME print 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testSimpleAssign(FlowSensitiveInlineVariablesTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testMultiDefinitionsBeforeUse
junit.framework.AssertionFailedError: 
Expected: function _func(){var x=0;print(1)}
Result: function _func(){var x=0;x=1;print(x)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME x 1 [source_file: expected0]
                        NUMBER 0.0 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME print 1 [source_file: expected0]
                        NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                        NUMBER 0.0 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                        NUMBER 1.0 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME print 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME x 1 [source_file: expected0]
            NUMBER 0.0 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [free_call: 1] [source_file: expected0]
            NAME print 1 [source_file: expected0]
            NUMBER 1.0 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    VAR 1 [source_file: testcode]
        NAME x 1 [source_file: testcode]
            NUMBER 0.0 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]
            NUMBER 1.0 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        CALL 1 [free_call: 1] [source_file: testcode]
            NAME print 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testMultiDefinitionsBeforeUse(FlowSensitiveInlineVariablesTest.java:114)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testAssignmentBeforeDefinition
junit.framework.AssertionFailedError: 
Expected: function _func(){x=1;var x;print(0)}
Result: function _func(){x=1;var x=0;print(x)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        NAME x 1 [source_file: expected0]
                        NUMBER 1.0 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME x 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME print 1 [source_file: expected0]
                        NUMBER 0.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                        NUMBER 1.0 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                        NUMBER 0.0 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME print 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]


Subtree1: NAME x 1 [source_file: expected0]


Subtree2: NAME x 1 [source_file: testcode]
    NUMBER 0.0 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testAssignmentBeforeDefinition(FlowSensitiveInlineVariablesTest.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineExpression8
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;var b;var x;print(a+b);print(a-b)}
Result: function _func(){var a;var b;var x=a+b;print(x);x=a-b;print(x)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME b 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME x 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME print 1 [source_file: expected0]
                        ADD 1 [source_file: expected0]
                            NAME a 1 [source_file: expected0]
                            NAME b 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME print 1 [source_file: expected0]
                        SUB 1 [source_file: expected0]
                            NAME a 1 [source_file: expected0]
                            NAME b 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME b 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                        ADD 1 [source_file: testcode]
                            NAME a 1 [source_file: testcode]
                            NAME b 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME print 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                        SUB 1 [source_file: testcode]
                            NAME a 1 [source_file: testcode]
                            NAME b 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME print 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME a 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME b 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME x 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [free_call: 1] [source_file: expected0]
            NAME print 1 [source_file: expected0]
            ADD 1 [source_file: expected0]
                NAME a 1 [source_file: expected0]
                NAME b 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [free_call: 1] [source_file: expected0]
            NAME print 1 [source_file: expected0]
            SUB 1 [source_file: expected0]
                NAME a 1 [source_file: expected0]
                NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    VAR 1 [source_file: testcode]
        NAME a 1 [source_file: testcode]
    VAR 1 [source_file: testcode]
        NAME b 1 [source_file: testcode]
    VAR 1 [source_file: testcode]
        NAME x 1 [source_file: testcode]
            ADD 1 [source_file: testcode]
                NAME a 1 [source_file: testcode]
                NAME b 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        CALL 1 [free_call: 1] [source_file: testcode]
            NAME print 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]
            SUB 1 [source_file: testcode]
                NAME a 1 [source_file: testcode]
                NAME b 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        CALL 1 [free_call: 1] [source_file: testcode]
            NAME print 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testInlineExpression8(FlowSensitiveInlineVariablesTest.java:252)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineExpression9
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;var b;var x;if(g)print(a+b);print(a-b)}
Result: function _func(){var a;var b;var x;if(g){x=a+b;print(x)}x=a-b;print(x)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME b 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME x 1 [source_file: expected0]
                IF 1 [source_file: expected0]
                    NAME g 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        EXPR_RESULT 1 [source_file: expected0]
                            CALL 1 [free_call: 1] [source_file: expected0]
                                NAME print 1 [source_file: expected0]
                                ADD 1 [source_file: expected0]
                                    NAME a 1 [source_file: expected0]
                                    NAME b 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME print 1 [source_file: expected0]
                        SUB 1 [source_file: expected0]
                            NAME a 1 [source_file: expected0]
                            NAME b 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME b 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                IF 1 [source_file: testcode]
                    NAME g 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        EXPR_RESULT 1 [source_file: testcode]
                            ASSIGN 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                ADD 1 [source_file: testcode]
                                    NAME a 1 [source_file: testcode]
                                    NAME b 1 [source_file: testcode]
                        EXPR_RESULT 1 [source_file: testcode]
                            CALL 1 [free_call: 1] [source_file: testcode]
                                NAME print 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                        SUB 1 [source_file: testcode]
                            NAME a 1 [source_file: testcode]
                            NAME b 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME print 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME a 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME b 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME x 1 [source_file: expected0]
    IF 1 [source_file: expected0]
        NAME g 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
            EXPR_RESULT 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME print 1 [source_file: expected0]
                    ADD 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        NAME b 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [free_call: 1] [source_file: expected0]
            NAME print 1 [source_file: expected0]
            SUB 1 [source_file: expected0]
                NAME a 1 [source_file: expected0]
                NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    VAR 1 [source_file: testcode]
        NAME a 1 [source_file: testcode]
    VAR 1 [source_file: testcode]
        NAME b 1 [source_file: testcode]
    VAR 1 [source_file: testcode]
        NAME x 1 [source_file: testcode]
    IF 1 [source_file: testcode]
        NAME g 1 [source_file: testcode]
        BLOCK 1 [source_file: testcode]
            EXPR_RESULT 1 [source_file: testcode]
                ASSIGN 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                    ADD 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        NAME b 1 [source_file: testcode]
            EXPR_RESULT 1 [source_file: testcode]
                CALL 1 [free_call: 1] [source_file: testcode]
                    NAME print 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]
            SUB 1 [source_file: testcode]
                NAME a 1 [source_file: testcode]
                NAME b 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        CALL 1 [free_call: 1] [source_file: testcode]
            NAME print 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testInlineExpression9(FlowSensitiveInlineVariablesTest.java:261)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineArguments
junit.framework.AssertionFailedError: 
Expected: function f(x,y){print(1)}
Result: function f(x,y){x=1;print(x)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME x 1 [source_file: expected0]
                NAME y 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME print 1 [source_file: expected0]
                        NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
                NAME x 1 [source_file: testcode]
                NAME y 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                        NUMBER 1.0 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME print 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [free_call: 1] [source_file: expected0]
            NAME print 1 [source_file: expected0]
            NUMBER 1.0 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]
            NUMBER 1.0 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        CALL 1 [free_call: 1] [source_file: testcode]
            NAME print 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:373)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:342)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:330)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testInlineArguments(FlowSensitiveInlineVariablesTest.java:452)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineSameVariableInStraightLine
junit.framework.AssertionFailedError: 
Expected: function _func(){var x;print(1);print(2)}
Result: function _func(){var x;x=1;print(x);x=2;print(x)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME x 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME print 1 [source_file: expected0]
                        NUMBER 1.0 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME print 1 [source_file: expected0]
                        NUMBER 2.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                        NUMBER 1.0 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME print 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                        NUMBER 2.0 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME print 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME x 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [free_call: 1] [source_file: expected0]
            NAME print 1 [source_file: expected0]
            NUMBER 1.0 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [free_call: 1] [source_file: expected0]
            NAME print 1 [source_file: expected0]
            NUMBER 2.0 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    VAR 1 [source_file: testcode]
        NAME x 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]
            NUMBER 1.0 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        CALL 1 [free_call: 1] [source_file: testcode]
            NAME print 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]
            NUMBER 2.0 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        CALL 1 [free_call: 1] [source_file: testcode]
            NAME print 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testInlineSameVariableInStraightLine(FlowSensitiveInlineVariablesTest.java:195)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineInDifferentPaths
junit.framework.AssertionFailedError: 
Expected: function _func(){var x;if(print)print(1);else print(2)}
Result: function _func(){var x;if(print){x=1;print(x)}else{x=2;print(x)}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME x 1 [source_file: expected0]
                IF 1 [source_file: expected0]
                    NAME print 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        EXPR_RESULT 1 [source_file: expected0]
                            CALL 1 [free_call: 1] [source_file: expected0]
                                NAME print 1 [source_file: expected0]
                                NUMBER 1.0 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        EXPR_RESULT 1 [source_file: expected0]
                            CALL 1 [free_call: 1] [source_file: expected0]
                                NAME print 1 [source_file: expected0]
                                NUMBER 2.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                IF 1 [source_file: testcode]
                    NAME print 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        EXPR_RESULT 1 [source_file: testcode]
                            ASSIGN 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                NUMBER 1.0 1 [source_file: testcode]
                        EXPR_RESULT 1 [source_file: testcode]
                            CALL 1 [free_call: 1] [source_file: testcode]
                                NAME print 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        EXPR_RESULT 1 [source_file: testcode]
                            ASSIGN 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                NUMBER 2.0 1 [source_file: testcode]
                        EXPR_RESULT 1 [source_file: testcode]
                            CALL 1 [free_call: 1] [source_file: testcode]
                                NAME print 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [free_call: 1] [source_file: expected0]
            NAME print 1 [source_file: expected0]
            NUMBER 1.0 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]
            NUMBER 1.0 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        CALL 1 [free_call: 1] [source_file: testcode]
            NAME print 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testInlineInDifferentPaths(FlowSensitiveInlineVariablesTest.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineExpressions11
junit.framework.AssertionFailedError: 
Expected: function _func(){var x;print(x+1)}
Result: function _func(){var x;x=x+1;print(x)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME x 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME print 1 [source_file: expected0]
                        ADD 1 [source_file: expected0]
                            NAME x 1 [source_file: expected0]
                            NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                        ADD 1 [source_file: testcode]
                            NAME x 1 [source_file: testcode]
                            NUMBER 1.0 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME print 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME x 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [free_call: 1] [source_file: expected0]
            NAME print 1 [source_file: expected0]
            ADD 1 [source_file: expected0]
                NAME x 1 [source_file: expected0]
                NUMBER 1.0 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    VAR 1 [source_file: testcode]
        NAME x 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]
            ADD 1 [source_file: testcode]
                NAME x 1 [source_file: testcode]
                NUMBER 1.0 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        CALL 1 [free_call: 1] [source_file: testcode]
            NAME print 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testInlineExpressions11(FlowSensitiveInlineVariablesTest.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineExpressions13
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;var b;var x;var y=2;var z=1+y;var i;var j=z+y;var k=z}
Result: function _func(){var a=1;var b=2;var x=a;var y=b;var z=x+y;var i=z;var j=z+y;var k=i}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME b 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME x 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME y 1 [source_file: expected0]
                        NUMBER 2.0 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME z 1 [source_file: expected0]
                        ADD 1 [source_file: expected0]
                            NUMBER 1.0 1 [source_file: expected0]
                            NAME y 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME i 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME j 1 [source_file: expected0]
                        ADD 1 [source_file: expected0]
                            NAME z 1 [source_file: expected0]
                            NAME y 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME k 1 [source_file: expected0]
                        NAME z 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                        NUMBER 1.0 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME b 1 [source_file: testcode]
                        NUMBER 2.0 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME y 1 [source_file: testcode]
                        NAME b 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME z 1 [source_file: testcode]
                        ADD 1 [source_file: testcode]
                            NAME x 1 [source_file: testcode]
                            NAME y 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME i 1 [source_file: testcode]
                        NAME z 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME j 1 [source_file: testcode]
                        ADD 1 [source_file: testcode]
                            NAME z 1 [source_file: testcode]
                            NAME y 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME k 1 [source_file: testcode]
                        NAME i 1 [source_file: testcode]


Subtree1: NAME a 1 [source_file: expected0]


Subtree2: NAME a 1 [source_file: testcode]
    NUMBER 1.0 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testInlineExpressions13(FlowSensitiveInlineVariablesTest.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testDefinitionAfterUse
junit.framework.AssertionFailedError: 
Expected: function _func(){var x;print(0);x=1}
Result: function _func(){var x=0;print(x);x=1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME x 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME print 1 [source_file: expected0]
                        NUMBER 0.0 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        NAME x 1 [source_file: expected0]
                        NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                        NUMBER 0.0 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME print 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                        NUMBER 1.0 1 [source_file: testcode]


Subtree1: NAME x 1 [source_file: expected0]


Subtree2: NAME x 1 [source_file: testcode]
    NUMBER 0.0 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testDefinitionAfterUse(FlowSensitiveInlineVariablesTest.java:191)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testTransitiveDependencies1
junit.framework.AssertionFailedError: 
Expected: function f(x){var a;var b=x;x=3;return b}
Result: function f(x){var a=x;var b=a;x=3;return b}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME x 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME b 1 [source_file: expected0]
                        NAME x 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        NAME x 1 [source_file: expected0]
                        NUMBER 3.0 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NAME b 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
                NAME x 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME b 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                        NUMBER 3.0 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NAME b 1 [source_file: testcode]


Subtree1: NAME a 1 [source_file: expected0]


Subtree2: NAME a 1 [source_file: testcode]
    NAME x 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:373)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:342)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:330)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testTransitiveDependencies1(FlowSensitiveInlineVariablesTest.java:537)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testTransitiveDependencies2
junit.framework.AssertionFailedError: 
Expected: function f(x){var a;var b=x;var c;x=3;return b}
Result: function f(x){var a=x;var b=a;var c=b;x=3;return c}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME x 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME b 1 [source_file: expected0]
                        NAME x 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME c 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        NAME x 1 [source_file: expected0]
                        NUMBER 3.0 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NAME b 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
                NAME x 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME b 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME c 1 [source_file: testcode]
                        NAME b 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                        NUMBER 3.0 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NAME c 1 [source_file: testcode]


Subtree1: NAME a 1 [source_file: expected0]


Subtree2: NAME a 1 [source_file: testcode]
    NAME x 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:373)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:342)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:330)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testTransitiveDependencies2(FlowSensitiveInlineVariablesTest.java:543)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineIntoExpressions
junit.framework.AssertionFailedError: 
Expected: function _func(){var x;print(1+1)}
Result: function _func(){var x=1;print(x+1)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME x 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME print 1 [source_file: expected0]
                        ADD 1 [source_file: expected0]
                            NUMBER 1.0 1 [source_file: expected0]
                            NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                        NUMBER 1.0 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME print 1 [source_file: testcode]
                        ADD 1 [source_file: testcode]
                            NAME x 1 [source_file: testcode]
                            NUMBER 1.0 1 [source_file: testcode]


Subtree1: NAME x 1 [source_file: expected0]


Subtree2: NAME x 1 [source_file: testcode]
    NUMBER 1.0 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testInlineIntoExpressions(FlowSensitiveInlineVariablesTest.java:210)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
junit.framework.AssertionFailedError: 
Expected: function _func(){var x;unknown.length<2&&(unknown="0"+unknown);x=""+unknown;unknown.length<3&&(unknown="0"+unknown);x=x+unknown;return x}
Result: function _func(){var x="";unknown.length<2&&(unknown="0"+unknown);x=x+unknown;unknown.length<3&&(unknown="0"+unknown);x=x+unknown;return x}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME x 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    AND 1 [source_file: expected0]
                        LT 1 [source_file: expected0]
                            GETPROP 1 [source_file: expected0]
                                NAME unknown 1 [source_file: expected0]
                                STRING length 1 [source_file: expected0]
                            NUMBER 2.0 1 [source_file: expected0]
                        ASSIGN 1 [source_file: expected0]
                            NAME unknown 1 [source_file: expected0]
                            ADD 1 [source_file: expected0]
                                STRING 0 1 [source_file: expected0]
                                NAME unknown 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        NAME x 1 [source_file: expected0]
                        ADD 1 [source_file: expected0]
                            STRING  1 [source_file: expected0]
                            NAME unknown 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    AND 1 [source_file: expected0]
                        LT 1 [source_file: expected0]
                            GETPROP 1 [source_file: expected0]
                                NAME unknown 1 [source_file: expected0]
                                STRING length 1 [source_file: expected0]
                            NUMBER 3.0 1 [source_file: expected0]
                        ASSIGN 1 [source_file: expected0]
                            NAME unknown 1 [source_file: expected0]
                            ADD 1 [source_file: expected0]
                                STRING 0 1 [source_file: expected0]
                                NAME unknown 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        NAME x 1 [source_file: expected0]
                        ADD 1 [source_file: expected0]
                            NAME x 1 [source_file: expected0]
                            NAME unknown 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NAME x 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                        STRING  1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    AND 1 [source_file: testcode]
                        LT 1 [source_file: testcode]
                            GETPROP 1 [source_file: testcode]
                                NAME unknown 1 [source_file: testcode]
                                STRING length 1 [source_file: testcode]
                            NUMBER 2.0 1 [source_file: testcode]
                        ASSIGN 1 [source_file: testcode]
                            NAME unknown 1 [source_file: testcode]
                            ADD 1 [source_file: testcode]
                                STRING 0 1 [source_file: testcode]
                                NAME unknown 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                        ADD 1 [source_file: testcode]
                            NAME x 1 [source_file: testcode]
                            NAME unknown 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    AND 1 [source_file: testcode]
                        LT 1 [source_file: testcode]
                            GETPROP 1 [source_file: testcode]
                                NAME unknown 1 [source_file: testcode]
                                STRING length 1 [source_file: testcode]
                            NUMBER 3.0 1 [source_file: testcode]
                        ASSIGN 1 [source_file: testcode]
                            NAME unknown 1 [source_file: testcode]
                            ADD 1 [source_file: testcode]
                                STRING 0 1 [source_file: testcode]
                                NAME unknown 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                        ADD 1 [source_file: testcode]
                            NAME x 1 [source_file: testcode]
                            NAME unknown 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]


Subtree1: NAME x 1 [source_file: expected0]


Subtree2: NAME x 1 [source_file: testcode]
    STRING  1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testIssue698(FlowSensitiveInlineVariablesTest.java:487)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue777
junit.framework.AssertionFailedError: 
Expected: function f(cmd,ta){var temp;var temp2=cmd>>2;cmd=STACKTOP;var src=temp2;var dest=cmd>>2;var stop=src+37;for(;src<stop;src++,dest++)HEAP32[dest]=HEAP32[src];temp2=ta>>2;ta=STACKTOP;STACKTOP+=8;HEAP32[ta>>2]=HEAP32[temp2];HEAP32[ta+4>>2]=HEAP32[temp2+1]}
Result: function f(cmd,ta){var temp=cmd;var temp2=temp>>2;cmd=STACKTOP;var src=temp2;var dest=cmd>>2;var stop=src+37;for(;src<stop;src++,dest++)HEAP32[dest]=HEAP32[src];temp=ta;temp2=temp>>2;ta=STACKTOP;STACKTOP+=8;HEAP32[ta>>2]=HEAP32[temp2];HEAP32[ta+4>>2]=HEAP32[temp2+1]}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME cmd 1 [source_file: expected0]
                NAME ta 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME temp 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME temp2 1 [source_file: expected0]
                        RSH 1 [source_file: expected0]
                            NAME cmd 1 [source_file: expected0]
                            NUMBER 2.0 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        NAME cmd 1 [source_file: expected0]
                        NAME STACKTOP 1 [is_constant_name: 1] [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME src 1 [source_file: expected0]
                        NAME temp2 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME dest 1 [source_file: expected0]
                        RSH 1 [source_file: expected0]
                            NAME cmd 1 [source_file: expected0]
                            NUMBER 2.0 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME stop 1 [source_file: expected0]
                        ADD 1 [source_file: expected0]
                            NAME src 1 [source_file: expected0]
                            NUMBER 37.0 1 [source_file: expected0]
                FOR 1 [source_file: expected0]
                    EMPTY 1 [source_file: expected0]
                    LT 1 [source_file: expected0]
                        NAME src 1 [source_file: expected0]
                        NAME stop 1 [source_file: expected0]
                    COMMA 1 [source_file: expected0]
                        INC 1 [incrdecr: 1] [source_file: expected0]
                            NAME src 1 [source_file: expected0]
                        INC 1 [incrdecr: 1] [source_file: expected0]
                            NAME dest 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        EXPR_RESULT 1 [source_file: expected0]
                            ASSIGN 1 [source_file: expected0]
                                GETELEM 1 [source_file: expected0]
                                    NAME HEAP32 1 [is_constant_name: 1] [source_file: expected0]
                                    NAME dest 1 [source_file: expected0]
                                GETELEM 1 [source_file: expected0]
                                    NAME HEAP32 1 [is_constant_name: 1] [source_file: expected0]
                                    NAME src 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        NAME temp2 1 [source_file: expected0]
                        RSH 1 [source_file: expected0]
                            NAME ta 1 [source_file: expected0]
                            NUMBER 2.0 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        NAME ta 1 [source_file: expected0]
                        NAME STACKTOP 1 [is_constant_name: 1] [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    ASSIGN_ADD 1 [source_file: expected0]
                        NAME STACKTOP 1 [is_constant_name: 1] [source_file: expected0]
                        NUMBER 8.0 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME HEAP32 1 [is_constant_name: 1] [source_file: expected0]
                            RSH 1 [source_file: expected0]
                                NAME ta 1 [source_file: expected0]
                                NUMBER 2.0 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME HEAP32 1 [is_constant_name: 1] [source_file: expected0]
                            NAME temp2 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME HEAP32 1 [is_constant_name: 1] [source_file: expected0]
                            RSH 1 [source_file: expected0]
                                ADD 1 [source_file: expected0]
                                    NAME ta 1 [source_file: expected0]
                                    NUMBER 4.0 1 [source_file: expected0]
                                NUMBER 2.0 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME HEAP32 1 [is_constant_name: 1] [source_file: expected0]
                            ADD 1 [source_file: expected0]
                                NAME temp2 1 [source_file: expected0]
                                NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
                NAME cmd 1 [source_file: testcode]
                NAME ta 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME temp 1 [source_file: testcode]
                        NAME cmd 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME temp2 1 [source_file: testcode]
                        RSH 1 [source_file: testcode]
                            NAME temp 1 [source_file: testcode]
                            NUMBER 2.0 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        NAME cmd 1 [source_file: testcode]
                        NAME STACKTOP 1 [is_constant_name: 1] [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME src 1 [source_file: testcode]
                        NAME temp2 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME dest 1 [source_file: testcode]
                        RSH 1 [source_file: testcode]
                            NAME cmd 1 [source_file: testcode]
                            NUMBER 2.0 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME stop 1 [source_file: testcode]
                        ADD 1 [source_file: testcode]
                            NAME src 1 [source_file: testcode]
                            NUMBER 37.0 1 [source_file: testcode]
                FOR 1 [source_file: testcode]
                    EMPTY 1 [source_file: testcode]
                    LT 1 [source_file: testcode]
                        NAME src 1 [source_file: testcode]
                        NAME stop 1 [source_file: testcode]
                    COMMA 1 [source_file: testcode]
                        INC 1 [incrdecr: 1] [source_file: testcode]
                            NAME src 1 [source_file: testcode]
                        INC 1 [incrdecr: 1] [source_file: testcode]
                            NAME dest 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        EXPR_RESULT 1 [source_file: testcode]
                            ASSIGN 1 [source_file: testcode]
                                GETELEM 1 [source_file: testcode]
                                    NAME HEAP32 1 [is_constant_name: 1] [source_file: testcode]
                                    NAME dest 1 [source_file: testcode]
                                GETELEM 1 [source_file: testcode]
                                    NAME HEAP32 1 [is_constant_name: 1] [source_file: testcode]
                                    NAME src 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        NAME temp 1 [source_file: testcode]
                        NAME ta 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        NAME temp2 1 [source_file: testcode]
                        RSH 1 [source_file: testcode]
                            NAME temp 1 [source_file: testcode]
                            NUMBER 2.0 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        NAME ta 1 [source_file: testcode]
                        NAME STACKTOP 1 [is_constant_name: 1] [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN_ADD 1 [source_file: testcode]
                        NAME STACKTOP 1 [is_constant_name: 1] [source_file: testcode]
                        NUMBER 8.0 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        GETELEM 1 [source_file: testcode]
                            NAME HEAP32 1 [is_constant_name: 1] [source_file: testcode]
                            RSH 1 [source_file: testcode]
                                NAME ta 1 [source_file: testcode]
                                NUMBER 2.0 1 [source_file: testcode]
                        GETELEM 1 [source_file: testcode]
                            NAME HEAP32 1 [is_constant_name: 1] [source_file: testcode]
                            NAME temp2 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        GETELEM 1 [source_file: testcode]
                            NAME HEAP32 1 [is_constant_name: 1] [source_file: testcode]
                            RSH 1 [source_file: testcode]
                                ADD 1 [source_file: testcode]
                                    NAME ta 1 [source_file: testcode]
                                    NUMBER 4.0 1 [source_file: testcode]
                                NUMBER 2.0 1 [source_file: testcode]
                        GETELEM 1 [source_file: testcode]
                            NAME HEAP32 1 [is_constant_name: 1] [source_file: testcode]
                            ADD 1 [source_file: testcode]
                                NAME temp2 1 [source_file: testcode]
                                NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME temp 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME temp2 1 [source_file: expected0]
            RSH 1 [source_file: expected0]
                NAME cmd 1 [source_file: expected0]
                NUMBER 2.0 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            NAME cmd 1 [source_file: expected0]
            NAME STACKTOP 1 [is_constant_name: 1] [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME src 1 [source_file: expected0]
            NAME temp2 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME dest 1 [source_file: expected0]
            RSH 1 [source_file: expected0]
                NAME cmd 1 [source_file: expected0]
                NUMBER 2.0 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME stop 1 [source_file: expected0]
            ADD 1 [source_file: expected0]
                NAME src 1 [source_file: expected0]
                NUMBER 37.0 1 [source_file: expected0]
    FOR 1 [source_file: expected0]
        EMPTY 1 [source_file: expected0]
        LT 1 [source_file: expected0]
            NAME src 1 [source_file: expected0]
            NAME stop 1 [source_file: expected0]
        COMMA 1 [source_file: expected0]
            INC 1 [incrdecr: 1] [source_file: expected0]
                NAME src 1 [source_file: expected0]
            INC 1 [incrdecr: 1] [source_file: expected0]
                NAME dest 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
            EXPR_RESULT 1 [source_file: expected0]
                ASSIGN 1 [source_file: expected0]
                    GETELEM 1 [source_file: expected0]
                        NAME HEAP32 1 [is_constant_name: 1] [source_file: expected0]
                        NAME dest 1 [source_file: expected0]
                    GETELEM 1 [source_file: expected0]
                        NAME HEAP32 1 [is_constant_name: 1] [source_file: expected0]
                        NAME src 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            NAME temp2 1 [source_file: expected0]
            RSH 1 [source_file: expected0]
                NAME ta 1 [source_file: expected0]
                NUMBER 2.0 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            NAME ta 1 [source_file: expected0]
            NAME STACKTOP 1 [is_constant_name: 1] [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN_ADD 1 [source_file: expected0]
            NAME STACKTOP 1 [is_constant_name: 1] [source_file: expected0]
            NUMBER 8.0 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETELEM 1 [source_file: expected0]
                NAME HEAP32 1 [is_constant_name: 1] [source_file: expected0]
                RSH 1 [source_file: expected0]
                    NAME ta 1 [source_file: expected0]
                    NUMBER 2.0 1 [source_file: expected0]
            GETELEM 1 [source_file: expected0]
                NAME HEAP32 1 [is_constant_name: 1] [source_file: expected0]
                NAME temp2 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETELEM 1 [source_file: expected0]
                NAME HEAP32 1 [is_constant_name: 1] [source_file: expected0]
                RSH 1 [source_file: expected0]
                    ADD 1 [source_file: expected0]
                        NAME ta 1 [source_file: expected0]
                        NUMBER 4.0 1 [source_file: expected0]
                    NUMBER 2.0 1 [source_file: expected0]
            GETELEM 1 [source_file: expected0]
                NAME HEAP32 1 [is_constant_name: 1] [source_file: expected0]
                ADD 1 [source_file: expected0]
                    NAME temp2 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    VAR 1 [source_file: testcode]
        NAME temp 1 [source_file: testcode]
            NAME cmd 1 [source_file: testcode]
    VAR 1 [source_file: testcode]
        NAME temp2 1 [source_file: testcode]
            RSH 1 [source_file: testcode]
                NAME temp 1 [source_file: testcode]
                NUMBER 2.0 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            NAME cmd 1 [source_file: testcode]
            NAME STACKTOP 1 [is_constant_name: 1] [source_file: testcode]
    VAR 1 [source_file: testcode]
        NAME src 1 [source_file: testcode]
            NAME temp2 1 [source_file: testcode]
    VAR 1 [source_file: testcode]
        NAME dest 1 [source_file: testcode]
            RSH 1 [source_file: testcode]
                NAME cmd 1 [source_file: testcode]
                NUMBER 2.0 1 [source_file: testcode]
    VAR 1 [source_file: testcode]
        NAME stop 1 [source_file: testcode]
            ADD 1 [source_file: testcode]
                NAME src 1 [source_file: testcode]
                NUMBER 37.0 1 [source_file: testcode]
    FOR 1 [source_file: testcode]
        EMPTY 1 [source_file: testcode]
        LT 1 [source_file: testcode]
            NAME src 1 [source_file: testcode]
            NAME stop 1 [source_file: testcode]
        COMMA 1 [source_file: testcode]
            INC 1 [incrdecr: 1] [source_file: testcode]
                NAME src 1 [source_file: testcode]
            INC 1 [incrdecr: 1] [source_file: testcode]
                NAME dest 1 [source_file: testcode]
        BLOCK 1 [source_file: testcode]
            EXPR_RESULT 1 [source_file: testcode]
                ASSIGN 1 [source_file: testcode]
                    GETELEM 1 [source_file: testcode]
                        NAME HEAP32 1 [is_constant_name: 1] [source_file: testcode]
                        NAME dest 1 [source_file: testcode]
                    GETELEM 1 [source_file: testcode]
                        NAME HEAP32 1 [is_constant_name: 1] [source_file: testcode]
                        NAME src 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            NAME temp 1 [source_file: testcode]
            NAME ta 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            NAME temp2 1 [source_file: testcode]
            RSH 1 [source_file: testcode]
                NAME temp 1 [source_file: testcode]
                NUMBER 2.0 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            NAME ta 1 [source_file: testcode]
            NAME STACKTOP 1 [is_constant_name: 1] [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN_ADD 1 [source_file: testcode]
            NAME STACKTOP 1 [is_constant_name: 1] [source_file: testcode]
            NUMBER 8.0 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETELEM 1 [source_file: testcode]
                NAME HEAP32 1 [is_constant_name: 1] [source_file: testcode]
                RSH 1 [source_file: testcode]
                    NAME ta 1 [source_file: testcode]
                    NUMBER 2.0 1 [source_file: testcode]
            GETELEM 1 [source_file: testcode]
                NAME HEAP32 1 [is_constant_name: 1] [source_file: testcode]
                NAME temp2 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETELEM 1 [source_file: testcode]
                NAME HEAP32 1 [is_constant_name: 1] [source_file: testcode]
                RSH 1 [source_file: testcode]
                    ADD 1 [source_file: testcode]
                        NAME ta 1 [source_file: testcode]
                        NUMBER 4.0 1 [source_file: testcode]
                    NUMBER 2.0 1 [source_file: testcode]
            GETELEM 1 [source_file: testcode]
                NAME HEAP32 1 [is_constant_name: 1] [source_file: testcode]
                ADD 1 [source_file: testcode]
                    NAME temp2 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:373)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:342)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:330)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testIssue777(FlowSensitiveInlineVariablesTest.java:503)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineExpressions1
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;var b;var x;print(a+b)}
Result: function _func(){var a;var b;var x=a+b;print(x)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME b 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME x 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME print 1 [source_file: expected0]
                        ADD 1 [source_file: expected0]
                            NAME a 1 [source_file: expected0]
                            NAME b 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME b 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                        ADD 1 [source_file: testcode]
                            NAME a 1 [source_file: testcode]
                            NAME b 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME print 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]


Subtree1: NAME x 1 [source_file: expected0]


Subtree2: NAME x 1 [source_file: testcode]
    ADD 1 [source_file: testcode]
        NAME a 1 [source_file: testcode]
        NAME b 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testInlineExpressions1(FlowSensitiveInlineVariablesTest.java:214)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineExpressions3
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;var b;var x;x=a+b;print(a-b)}
Result: function _func(){var a;var b;var x;x=a+b;x=a-b;print(x)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME b 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME x 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        NAME x 1 [source_file: expected0]
                        ADD 1 [source_file: expected0]
                            NAME a 1 [source_file: expected0]
                            NAME b 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME print 1 [source_file: expected0]
                        SUB 1 [source_file: expected0]
                            NAME a 1 [source_file: expected0]
                            NAME b 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME b 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                        ADD 1 [source_file: testcode]
                            NAME a 1 [source_file: testcode]
                            NAME b 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                        SUB 1 [source_file: testcode]
                            NAME a 1 [source_file: testcode]
                            NAME b 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME print 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME a 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME b 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME x 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            NAME x 1 [source_file: expected0]
            ADD 1 [source_file: expected0]
                NAME a 1 [source_file: expected0]
                NAME b 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [free_call: 1] [source_file: expected0]
            NAME print 1 [source_file: expected0]
            SUB 1 [source_file: expected0]
                NAME a 1 [source_file: expected0]
                NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    VAR 1 [source_file: testcode]
        NAME a 1 [source_file: testcode]
    VAR 1 [source_file: testcode]
        NAME b 1 [source_file: testcode]
    VAR 1 [source_file: testcode]
        NAME x 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]
            ADD 1 [source_file: testcode]
                NAME a 1 [source_file: testcode]
                NAME b 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]
            SUB 1 [source_file: testcode]
                NAME a 1 [source_file: testcode]
                NAME b 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        CALL 1 [free_call: 1] [source_file: testcode]
            NAME print 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testInlineExpressions3(FlowSensitiveInlineVariablesTest.java:223)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testRemoveWithLabels
junit.framework.AssertionFailedError: 
Expected: function _func(){var x=1;L:;print(2)}
Result: function _func(){var x=1;L:x=2;print(x)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME x 1 [source_file: expected0]
                        NUMBER 1.0 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME L 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME print 1 [source_file: expected0]
                        NUMBER 2.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                        NUMBER 1.0 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME L 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        EXPR_RESULT 1 [source_file: testcode]
                            ASSIGN 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                NUMBER 2.0 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME print 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]
            NUMBER 2.0 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)
	at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testRemoveWithLabels(FlowSensitiveInlineVariablesTest.java:375)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.IntegrationTest::testFlowSensitiveInlineVariables1
junit.framework.AssertionFailedError: 
Expected: function f(){var x=3;return 5}
Result: function f(){var x=3;x=5;return x}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: input0] [input_id: InputId: input0]
        FUNCTION f 1 [source_file: input0]
            NAME f 1 [source_file: input0]
            PARAM_LIST 1 [source_file: input0]
            BLOCK 1 [source_file: input0]
                VAR 1 [source_file: input0]
                    NAME x 1 [source_file: input0]
                        NUMBER 3.0 1 [source_file: input0]
                RETURN 1 [source_file: input0]
                    NUMBER 5.0 1 [source_file: input0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        FUNCTION f 1 [source_file: i0]
            NAME f 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
                VAR 1 [source_file: i0]
                    NAME x 1 [source_file: i0]
                        NUMBER 3.0 1 [source_file: i0]
                EXPR_RESULT 1 [source_file: i0]
                    ASSIGN 1 [source_file: i0]
                        NAME x 1 [source_file: i0]
                        NUMBER 5.0 1 [source_file: i0]
                RETURN 1 [source_file: i0]
                    NAME x 1 [source_file: i0]


Subtree1: BLOCK 1 [source_file: input0]
    VAR 1 [source_file: input0]
        NAME x 1 [source_file: input0]
            NUMBER 3.0 1 [source_file: input0]
    RETURN 1 [source_file: input0]
        NUMBER 5.0 1 [source_file: input0]


Subtree2: BLOCK 1 [source_file: i0]
    VAR 1 [source_file: i0]
        NAME x 1 [source_file: i0]
            NUMBER 3.0 1 [source_file: i0]
    EXPR_RESULT 1 [source_file: i0]
        ASSIGN 1 [source_file: i0]
            NAME x 1 [source_file: i0]
            NUMBER 5.0 1 [source_file: i0]
    RETURN 1 [source_file: i0]
        NAME x 1 [source_file: i0]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.IntegrationTestCase.test(IntegrationTestCase.java:97)
	at com.google.javascript.jscomp.IntegrationTestCase.test(IntegrationTestCase.java:79)
	at com.google.javascript.jscomp.IntegrationTest.testFlowSensitiveInlineVariables1(IntegrationTest.java:1060)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.IntegrationTest::testFlowSensitiveInlineVariables2
junit.framework.AssertionFailedError: 
Expected: function f(){alert("0-")}
Result: function f(){var a=0,a=a+"-";alert(a)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: input0] [input_id: InputId: input0]
        FUNCTION f 1 [source_file: input0]
            NAME f 1 [source_file: input0]
            PARAM_LIST 1 [source_file: input0]
            BLOCK 1 [source_file: input0]
                EXPR_RESULT 2 [source_file: input0]
                    CALL 2 [free_call: 1] [source_file: input0]
                        NAME alert 2 [source_file: input0]
                        STRING 0- 2 [source_file: input0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        FUNCTION f 1 [source_file: i0]
            NAME f 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
                VAR 2 [jsdoc_info: JSDocInfo] [source_file: i0]
                    NAME a 2 [source_file: i0]
                        NUMBER 0.0 2 [source_file: i0]
                    NAME a 3 [source_file: i0]
                        ADD 3 [source_file: i0]
                            NAME a 3 [source_file: i0]
                            STRING - 3 [source_file: i0]
                EXPR_RESULT 4 [source_file: i0]
                    CALL 4 [free_call: 1] [source_file: i0]
                        NAME alert 4 [source_file: i0]
                        NAME a 4 [source_file: i0]


Subtree1: BLOCK 1 [source_file: input0]
    EXPR_RESULT 2 [source_file: input0]
        CALL 2 [free_call: 1] [source_file: input0]
            NAME alert 2 [source_file: input0]
            STRING 0- 2 [source_file: input0]


Subtree2: BLOCK 1 [source_file: i0]
    VAR 2 [jsdoc_info: JSDocInfo] [source_file: i0]
        NAME a 2 [source_file: i0]
            NUMBER 0.0 2 [source_file: i0]
        NAME a 3 [source_file: i0]
            ADD 3 [source_file: i0]
                NAME a 3 [source_file: i0]
                STRING - 3 [source_file: i0]
    EXPR_RESULT 4 [source_file: i0]
        CALL 4 [free_call: 1] [source_file: i0]
            NAME alert 4 [source_file: i0]
            NAME a 4 [source_file: i0]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.IntegrationTestCase.test(IntegrationTestCase.java:97)
	at com.google.javascript.jscomp.IntegrationTestCase.test(IntegrationTestCase.java:79)
	at com.google.javascript.jscomp.IntegrationTest.testFlowSensitiveInlineVariables2(IntegrationTest.java:1073)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
