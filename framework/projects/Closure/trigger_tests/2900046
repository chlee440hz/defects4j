--- com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject2
junit.framework.AssertionFailedError: 
Expected: function local(){var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)}
Result: function local(){var a={y:y};a.x=z;f(a.x,a.y)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION local 1 [source_file: expected0]
            NAME local 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME JSCompiler_object_inline_y_0 1 [source_file: expected0]
                        NAME y 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME JSCompiler_object_inline_x_1 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        NAME JSCompiler_object_inline_x_1 1 [source_file: expected0]
                        NAME z 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME f 1 [source_file: expected0]
                        NAME JSCompiler_object_inline_x_1 1 [source_file: expected0]
                        NAME JSCompiler_object_inline_y_0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION local 1 [source_file: testcode]
            NAME local 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                        OBJECTLIT 1 [source_file: testcode]
                            STRING_KEY y 1 [source_file: testcode]
                                NAME y 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        GETPROP 1 [source_file: testcode]
                            NAME a 1 [source_file: testcode]
                            STRING x 1 [source_file: testcode]
                        NAME z 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME f 1 [source_file: testcode]
                        GETPROP 1 [source_file: testcode]
                            NAME a 1 [source_file: testcode]
                            STRING x 1 [source_file: testcode]
                        GETPROP 1 [source_file: testcode]
                            NAME a 1 [source_file: testcode]
                            STRING y 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME JSCompiler_object_inline_y_0 1 [source_file: expected0]
            NAME y 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME JSCompiler_object_inline_x_1 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            NAME JSCompiler_object_inline_x_1 1 [source_file: expected0]
            NAME z 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [free_call: 1] [source_file: expected0]
            NAME f 1 [source_file: expected0]
            NAME JSCompiler_object_inline_x_1 1 [source_file: expected0]
            NAME JSCompiler_object_inline_y_0 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    VAR 1 [source_file: testcode]
        NAME a 1 [source_file: testcode]
            OBJECTLIT 1 [source_file: testcode]
                STRING_KEY y 1 [source_file: testcode]
                    NAME y 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                NAME a 1 [source_file: testcode]
                STRING x 1 [source_file: testcode]
            NAME z 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        CALL 1 [free_call: 1] [source_file: testcode]
            NAME f 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                NAME a 1 [source_file: testcode]
                STRING x 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                NAME a 1 [source_file: testcode]
                STRING y 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)
	at com.google.javascript.jscomp.InlineObjectLiteralsTest.testLocal(InlineObjectLiteralsTest.java:355)
	at com.google.javascript.jscomp.InlineObjectLiteralsTest.testObject2(InlineObjectLiteralsTest.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject10
junit.framework.AssertionFailedError: 
Expected: function local(){var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_c_2;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,JSCompiler_object_inline_c_2=void 0,true;JSCompiler_object_inline_c_2=c;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)+JSCompiler_object_inline_c_2}
Result: function local(){var x;var b=f();x={a:a,b:b};x.c=c;if(x.a)g(x.b)+x.c}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION local 1 [source_file: expected0]
            NAME local 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME JSCompiler_object_inline_c_2 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME b 1 [source_file: expected0]
                        CALL 1 [free_call: 1] [source_file: expected0]
                            NAME f 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    COMMA 1 [source_file: expected0]
                        COMMA 1 [source_file: expected0]
                            COMMA 1 [source_file: expected0]
                                ASSIGN 1 [source_file: expected0]
                                    NAME JSCompiler_object_inline_a_0 1 [source_file: expected0]
                                    NAME a 1 [source_file: expected0]
                                ASSIGN 1 [source_file: expected0]
                                    NAME JSCompiler_object_inline_b_1 1 [source_file: expected0]
                                    NAME b 1 [source_file: expected0]
                            ASSIGN 1 [source_file: expected0]
                                NAME JSCompiler_object_inline_c_2 1 [source_file: expected0]
                                VOID 1 [source_file: expected0]
                                    NUMBER 0.0 1 [source_file: expected0]
                        TRUE 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        NAME JSCompiler_object_inline_c_2 1 [source_file: expected0]
                        NAME c 1 [source_file: expected0]
                IF 1 [source_file: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        EXPR_RESULT 1 [source_file: expected0]
                            ADD 1 [source_file: expected0]
                                CALL 1 [free_call: 1] [source_file: expected0]
                                    NAME g 1 [source_file: expected0]
                                    NAME JSCompiler_object_inline_b_1 1 [source_file: expected0]
                                NAME JSCompiler_object_inline_c_2 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION local 1 [source_file: testcode]
            NAME local 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME x 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME b 1 [source_file: testcode]
                        CALL 1 [free_call: 1] [source_file: testcode]
                            NAME f 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                        OBJECTLIT 1 [source_file: testcode]
                            STRING_KEY a 1 [source_file: testcode]
                                NAME a 1 [source_file: testcode]
                            STRING_KEY b 1 [source_file: testcode]
                                NAME b 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        GETPROP 1 [source_file: testcode]
                            NAME x 1 [source_file: testcode]
                            STRING c 1 [source_file: testcode]
                        NAME c 1 [source_file: testcode]
                IF 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                        STRING a 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        EXPR_RESULT 1 [source_file: testcode]
                            ADD 1 [source_file: testcode]
                                CALL 1 [free_call: 1] [source_file: testcode]
                                    NAME g 1 [source_file: testcode]
                                    GETPROP 1 [source_file: testcode]
                                        NAME x 1 [source_file: testcode]
                                        STRING b 1 [source_file: testcode]
                                GETPROP 1 [source_file: testcode]
                                    NAME x 1 [source_file: testcode]
                                    STRING c 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME JSCompiler_object_inline_a_0 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME JSCompiler_object_inline_b_1 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME JSCompiler_object_inline_c_2 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME b 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME f 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        COMMA 1 [source_file: expected0]
            COMMA 1 [source_file: expected0]
                COMMA 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [source_file: expected0]
                        NAME b 1 [source_file: expected0]
                ASSIGN 1 [source_file: expected0]
                    NAME JSCompiler_object_inline_c_2 1 [source_file: expected0]
                    VOID 1 [source_file: expected0]
                        NUMBER 0.0 1 [source_file: expected0]
            TRUE 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            NAME JSCompiler_object_inline_c_2 1 [source_file: expected0]
            NAME c 1 [source_file: expected0]
    IF 1 [source_file: expected0]
        NAME JSCompiler_object_inline_a_0 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
            EXPR_RESULT 1 [source_file: expected0]
                ADD 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME g 1 [source_file: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [source_file: expected0]
                    NAME JSCompiler_object_inline_c_2 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    VAR 1 [source_file: testcode]
        NAME x 1 [source_file: testcode]
    VAR 1 [source_file: testcode]
        NAME b 1 [source_file: testcode]
            CALL 1 [free_call: 1] [source_file: testcode]
                NAME f 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]
            OBJECTLIT 1 [source_file: testcode]
                STRING_KEY a 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                STRING_KEY b 1 [source_file: testcode]
                    NAME b 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                NAME x 1 [source_file: testcode]
                STRING c 1 [source_file: testcode]
            NAME c 1 [source_file: testcode]
    IF 1 [source_file: testcode]
        GETPROP 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]
            STRING a 1 [source_file: testcode]
        BLOCK 1 [source_file: testcode]
            EXPR_RESULT 1 [source_file: testcode]
                ADD 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME g 1 [source_file: testcode]
                        GETPROP 1 [source_file: testcode]
                            NAME x 1 [source_file: testcode]
                            STRING b 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME x 1 [source_file: testcode]
                        STRING c 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)
	at com.google.javascript.jscomp.InlineObjectLiteralsTest.testLocal(InlineObjectLiteralsTest.java:355)
	at com.google.javascript.jscomp.InlineObjectLiteralsTest.testObject10(InlineObjectLiteralsTest.java:176)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject22
junit.framework.AssertionFailedError: 
Expected: function local(){for(;1;){var JSCompiler_object_inline_y_0=1;var JSCompiler_object_inline_x_1;if(b)JSCompiler_object_inline_x_1=2;f(JSCompiler_object_inline_y_0,JSCompiler_object_inline_x_1)}}
Result: function local(){for(;1;){var a={y:1};if(b)a.x=2;f(a.y,a.x)}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION local 1 [source_file: expected0]
            NAME local 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                FOR 1 [source_file: expected0]
                    EMPTY 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
                    EMPTY 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 1 [source_file: expected0]
                            NAME JSCompiler_object_inline_y_0 1 [source_file: expected0]
                                NUMBER 1.0 1 [source_file: expected0]
                        VAR 1 [source_file: expected0]
                            NAME JSCompiler_object_inline_x_1 1 [source_file: expected0]
                        IF 1 [source_file: expected0]
                            NAME b 1 [source_file: expected0]
                            BLOCK 1 [source_file: expected0]
                                EXPR_RESULT 1 [source_file: expected0]
                                    ASSIGN 1 [source_file: expected0]
                                        NAME JSCompiler_object_inline_x_1 1 [source_file: expected0]
                                        NUMBER 2.0 1 [source_file: expected0]
                        EXPR_RESULT 1 [source_file: expected0]
                            CALL 1 [free_call: 1] [source_file: expected0]
                                NAME f 1 [source_file: expected0]
                                NAME JSCompiler_object_inline_y_0 1 [source_file: expected0]
                                NAME JSCompiler_object_inline_x_1 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION local 1 [source_file: testcode]
            NAME local 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                FOR 1 [source_file: testcode]
                    EMPTY 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]
                    EMPTY 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 1 [source_file: testcode]
                            NAME a 1 [source_file: testcode]
                                OBJECTLIT 1 [source_file: testcode]
                                    STRING_KEY y 1 [source_file: testcode]
                                        NUMBER 1.0 1 [source_file: testcode]
                        IF 1 [source_file: testcode]
                            NAME b 1 [source_file: testcode]
                            BLOCK 1 [source_file: testcode]
                                EXPR_RESULT 1 [source_file: testcode]
                                    ASSIGN 1 [source_file: testcode]
                                        GETPROP 1 [source_file: testcode]
                                            NAME a 1 [source_file: testcode]
                                            STRING x 1 [source_file: testcode]
                                        NUMBER 2.0 1 [source_file: testcode]
                        EXPR_RESULT 1 [source_file: testcode]
                            CALL 1 [free_call: 1] [source_file: testcode]
                                NAME f 1 [source_file: testcode]
                                GETPROP 1 [source_file: testcode]
                                    NAME a 1 [source_file: testcode]
                                    STRING y 1 [source_file: testcode]
                                GETPROP 1 [source_file: testcode]
                                    NAME a 1 [source_file: testcode]
                                    STRING x 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME JSCompiler_object_inline_y_0 1 [source_file: expected0]
            NUMBER 1.0 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME JSCompiler_object_inline_x_1 1 [source_file: expected0]
    IF 1 [source_file: expected0]
        NAME b 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
            EXPR_RESULT 1 [source_file: expected0]
                ASSIGN 1 [source_file: expected0]
                    NAME JSCompiler_object_inline_x_1 1 [source_file: expected0]
                    NUMBER 2.0 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [free_call: 1] [source_file: expected0]
            NAME f 1 [source_file: expected0]
            NAME JSCompiler_object_inline_y_0 1 [source_file: expected0]
            NAME JSCompiler_object_inline_x_1 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    VAR 1 [source_file: testcode]
        NAME a 1 [source_file: testcode]
            OBJECTLIT 1 [source_file: testcode]
                STRING_KEY y 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]
    IF 1 [source_file: testcode]
        NAME b 1 [source_file: testcode]
        BLOCK 1 [source_file: testcode]
            EXPR_RESULT 1 [source_file: testcode]
                ASSIGN 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING x 1 [source_file: testcode]
                    NUMBER 2.0 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        CALL 1 [free_call: 1] [source_file: testcode]
            NAME f 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                NAME a 1 [source_file: testcode]
                STRING y 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                NAME a 1 [source_file: testcode]
                STRING x 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)
	at com.google.javascript.jscomp.InlineObjectLiteralsTest.testLocal(InlineObjectLiteralsTest.java:355)
	at com.google.javascript.jscomp.InlineObjectLiteralsTest.testObject22(InlineObjectLiteralsTest.java:280)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject26
junit.framework.AssertionFailedError: 
Expected: function local(){var JSCompiler_object_inline_b_0;JSCompiler_object_inline_b_0=function(){};new JSCompiler_object_inline_b_0.c}
Result: function local(){var a={};a.b=function(){};new a.b.c}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION local 1 [source_file: expected0]
            NAME local 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME JSCompiler_object_inline_b_0 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        NAME JSCompiler_object_inline_b_0 1 [source_file: expected0]
                        FUNCTION  1 [source_file: expected0]
                            NAME  1 [source_file: expected0]
                            PARAM_LIST 1 [source_file: expected0]
                            BLOCK 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    NEW 1 [source_file: expected0]
                        GETPROP 1 [source_file: expected0]
                            NAME JSCompiler_object_inline_b_0 1 [source_file: expected0]
                            STRING c 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION local 1 [source_file: testcode]
            NAME local 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                        OBJECTLIT 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    ASSIGN 1 [source_file: testcode]
                        GETPROP 1 [source_file: testcode]
                            NAME a 1 [source_file: testcode]
                            STRING b 1 [source_file: testcode]
                        FUNCTION  1 [source_file: testcode]
                            NAME  1 [source_file: testcode]
                            PARAM_LIST 1 [source_file: testcode]
                            BLOCK 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    NEW 1 [source_file: testcode]
                        GETPROP 1 [source_file: testcode]
                            GETPROP 1 [source_file: testcode]
                                NAME a 1 [source_file: testcode]
                                STRING b 1 [source_file: testcode]
                            STRING c 1 [source_file: testcode]


Subtree1: NAME JSCompiler_object_inline_b_0 1 [source_file: expected0]


Subtree2: NAME a 1 [source_file: testcode]
    OBJECTLIT 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)
	at com.google.javascript.jscomp.InlineObjectLiteralsTest.testLocal(InlineObjectLiteralsTest.java:355)
	at com.google.javascript.jscomp.InlineObjectLiteralsTest.testObject26(InlineObjectLiteralsTest.java:332)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
