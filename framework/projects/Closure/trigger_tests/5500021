--- com.google.javascript.jscomp.FunctionRewriterTest::testReplaceIdentityFunction1
junit.framework.AssertionFailedError: 
Expected: function JSCompiler_identityFn(){return function(JSCompiler_identityFn_value){return JSCompiler_identityFn_value}}a.prototype.foo=JSCompiler_identityFn();a.prototype.foo=JSCompiler_identityFn();a.prototype.foo=JSCompiler_identityFn()
Result: a.prototype.foo=function(a){return a};a.prototype.foo=function(a){return a};a.prototype.foo=function(a){return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION JSCompiler_identityFn 1 [source_file: expected0]
            NAME JSCompiler_identityFn 1 [source_file: expected0]
            LP 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        LP 1 [source_file: expected0]
                            NAME JSCompiler_identityFn_value 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                NAME JSCompiler_identityFn_value 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_identityFn 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_identityFn 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_identityFn 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        RETURN 1 [source_file: testcode]
                            NAME a 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        RETURN 1 [source_file: testcode]
                            NAME a 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        RETURN 1 [source_file: testcode]
                            NAME a 1 [source_file: testcode]


Subtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
    FUNCTION JSCompiler_identityFn 1 [source_file: expected0]
        NAME JSCompiler_identityFn 1 [source_file: expected0]
        LP 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
            RETURN 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    LP 1 [source_file: expected0]
                        NAME JSCompiler_identityFn_value 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        RETURN 1 [source_file: expected0]
                            NAME JSCompiler_identityFn_value 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_identityFn 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_identityFn 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_identityFn 1 [source_file: expected0]


Subtree2: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    RETURN 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    RETURN 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    RETURN 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)
	at com.google.javascript.jscomp.FunctionRewriterTest.checkCompilesTo(FunctionRewriterTest.java:199)
	at com.google.javascript.jscomp.FunctionRewriterTest.testReplaceIdentityFunction1(FunctionRewriterTest.java:155)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FunctionRewriterTest::testReplaceReturnConst1
junit.framework.AssertionFailedError: 
Expected: function JSCompiler_returnArg(JSCompiler_returnArg_value){return function(){return JSCompiler_returnArg_value}}a.prototype.foo=JSCompiler_returnArg("foobar");a.prototype.foo=JSCompiler_returnArg("foobar");a.prototype.foo=JSCompiler_returnArg("foobar");a.prototype.foo=JSCompiler_returnArg("foobar")
Result: a.prototype.foo=function(){return"foobar"};a.prototype.foo=function(){return"foobar"};a.prototype.foo=function(){return"foobar"};a.prototype.foo=function(){return"foobar"}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION JSCompiler_returnArg 1 [source_file: expected0]
            NAME JSCompiler_returnArg 1 [source_file: expected0]
            LP 1 [source_file: expected0]
                NAME JSCompiler_returnArg_value 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        LP 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                NAME JSCompiler_returnArg_value 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_returnArg 1 [source_file: expected0]
                    STRING foobar 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_returnArg 1 [source_file: expected0]
                    STRING foobar 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_returnArg 1 [source_file: expected0]
                    STRING foobar 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_returnArg 1 [source_file: expected0]
                    STRING foobar 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        RETURN 1 [source_file: testcode]
                            STRING foobar 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        RETURN 1 [source_file: testcode]
                            STRING foobar 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        RETURN 1 [source_file: testcode]
                            STRING foobar 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        RETURN 1 [source_file: testcode]
                            STRING foobar 1 [source_file: testcode]


Subtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
    FUNCTION JSCompiler_returnArg 1 [source_file: expected0]
        NAME JSCompiler_returnArg 1 [source_file: expected0]
        LP 1 [source_file: expected0]
            NAME JSCompiler_returnArg_value 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
            RETURN 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    LP 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        RETURN 1 [source_file: expected0]
                            NAME JSCompiler_returnArg_value 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_returnArg 1 [source_file: expected0]
                STRING foobar 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_returnArg 1 [source_file: expected0]
                STRING foobar 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_returnArg 1 [source_file: expected0]
                STRING foobar 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_returnArg 1 [source_file: expected0]
                STRING foobar 1 [source_file: expected0]


Subtree2: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    RETURN 1 [source_file: testcode]
                        STRING foobar 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    RETURN 1 [source_file: testcode]
                        STRING foobar 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    RETURN 1 [source_file: testcode]
                        STRING foobar 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    RETURN 1 [source_file: testcode]
                        STRING foobar 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)
	at com.google.javascript.jscomp.FunctionRewriterTest.checkCompilesTo(FunctionRewriterTest.java:199)
	at com.google.javascript.jscomp.FunctionRewriterTest.testReplaceReturnConst1(FunctionRewriterTest.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FunctionRewriterTest::testReplaceReturnConst3
junit.framework.AssertionFailedError: 
Expected: function JSCompiler_returnArg(JSCompiler_returnArg_value){return function(){return JSCompiler_returnArg_value}}a.prototype.foo=JSCompiler_returnArg(void 0);a.prototype.foo=JSCompiler_returnArg(void 0);a.prototype.foo=JSCompiler_returnArg(void 0);a.prototype.foo=JSCompiler_returnArg(void 0)
Result: a.prototype.foo=function(){return void 0};a.prototype.foo=function(){return void 0};a.prototype.foo=function(){return void 0};a.prototype.foo=function(){return void 0}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION JSCompiler_returnArg 1 [source_file: expected0]
            NAME JSCompiler_returnArg 1 [source_file: expected0]
            LP 1 [source_file: expected0]
                NAME JSCompiler_returnArg_value 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        LP 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                NAME JSCompiler_returnArg_value 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_returnArg 1 [source_file: expected0]
                    VOID 1 [source_file: expected0]
                        NUMBER 0.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_returnArg 1 [source_file: expected0]
                    VOID 1 [source_file: expected0]
                        NUMBER 0.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_returnArg 1 [source_file: expected0]
                    VOID 1 [source_file: expected0]
                        NUMBER 0.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_returnArg 1 [source_file: expected0]
                    VOID 1 [source_file: expected0]
                        NUMBER 0.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        RETURN 1 [source_file: testcode]
                            VOID 1 [source_file: testcode]
                                NUMBER 0.0 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        RETURN 1 [source_file: testcode]
                            VOID 1 [source_file: testcode]
                                NUMBER 0.0 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        RETURN 1 [source_file: testcode]
                            VOID 1 [source_file: testcode]
                                NUMBER 0.0 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        RETURN 1 [source_file: testcode]
                            VOID 1 [source_file: testcode]
                                NUMBER 0.0 1 [source_file: testcode]


Subtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
    FUNCTION JSCompiler_returnArg 1 [source_file: expected0]
        NAME JSCompiler_returnArg 1 [source_file: expected0]
        LP 1 [source_file: expected0]
            NAME JSCompiler_returnArg_value 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
            RETURN 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    LP 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        RETURN 1 [source_file: expected0]
                            NAME JSCompiler_returnArg_value 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_returnArg 1 [source_file: expected0]
                VOID 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_returnArg 1 [source_file: expected0]
                VOID 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_returnArg 1 [source_file: expected0]
                VOID 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_returnArg 1 [source_file: expected0]
                VOID 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]


Subtree2: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    RETURN 1 [source_file: testcode]
                        VOID 1 [source_file: testcode]
                            NUMBER 0.0 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    RETURN 1 [source_file: testcode]
                        VOID 1 [source_file: testcode]
                            NUMBER 0.0 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    RETURN 1 [source_file: testcode]
                        VOID 1 [source_file: testcode]
                            NUMBER 0.0 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    RETURN 1 [source_file: testcode]
                        VOID 1 [source_file: testcode]
                            NUMBER 0.0 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)
	at com.google.javascript.jscomp.FunctionRewriterTest.checkCompilesTo(FunctionRewriterTest.java:199)
	at com.google.javascript.jscomp.FunctionRewriterTest.testReplaceReturnConst3(FunctionRewriterTest.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FunctionRewriterTest::testReplaceGetter1
junit.framework.AssertionFailedError: 
Expected: function JSCompiler_get(JSCompiler_get_name){return function(){return this[JSCompiler_get_name]}}a.prototype.foo=JSCompiler_get("foo_");a.prototype.foo=JSCompiler_get("foo_");a.prototype.foo=JSCompiler_get("foo_");a.prototype.foo=JSCompiler_get("foo_")
Result: a.prototype.foo=function(){return this.foo_};a.prototype.foo=function(){return this.foo_};a.prototype.foo=function(){return this.foo_};a.prototype.foo=function(){return this.foo_}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION JSCompiler_get 1 [source_file: expected0]
            NAME JSCompiler_get 1 [source_file: expected0]
            LP 1 [source_file: expected0]
                NAME JSCompiler_get_name 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        LP 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                GETELEM 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME JSCompiler_get_name 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_get 1 [source_file: expected0]
                    STRING foo_ 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_get 1 [source_file: expected0]
                    STRING foo_ 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_get 1 [source_file: expected0]
                    STRING foo_ 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_get 1 [source_file: expected0]
                    STRING foo_ 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        RETURN 1 [source_file: testcode]
                            GETPROP 1 [source_file: testcode]
                                THIS 1 [source_file: testcode]
                                STRING foo_ 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        RETURN 1 [source_file: testcode]
                            GETPROP 1 [source_file: testcode]
                                THIS 1 [source_file: testcode]
                                STRING foo_ 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        RETURN 1 [source_file: testcode]
                            GETPROP 1 [source_file: testcode]
                                THIS 1 [source_file: testcode]
                                STRING foo_ 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        RETURN 1 [source_file: testcode]
                            GETPROP 1 [source_file: testcode]
                                THIS 1 [source_file: testcode]
                                STRING foo_ 1 [source_file: testcode]


Subtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
    FUNCTION JSCompiler_get 1 [source_file: expected0]
        NAME JSCompiler_get 1 [source_file: expected0]
        LP 1 [source_file: expected0]
            NAME JSCompiler_get_name 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
            RETURN 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    LP 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        RETURN 1 [source_file: expected0]
                            GETELEM 1 [source_file: expected0]
                                THIS 1 [source_file: expected0]
                                NAME JSCompiler_get_name 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_get 1 [source_file: expected0]
                STRING foo_ 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_get 1 [source_file: expected0]
                STRING foo_ 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_get 1 [source_file: expected0]
                STRING foo_ 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_get 1 [source_file: expected0]
                STRING foo_ 1 [source_file: expected0]


Subtree2: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    RETURN 1 [source_file: testcode]
                        GETPROP 1 [source_file: testcode]
                            THIS 1 [source_file: testcode]
                            STRING foo_ 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    RETURN 1 [source_file: testcode]
                        GETPROP 1 [source_file: testcode]
                            THIS 1 [source_file: testcode]
                            STRING foo_ 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    RETURN 1 [source_file: testcode]
                        GETPROP 1 [source_file: testcode]
                            THIS 1 [source_file: testcode]
                            STRING foo_ 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    RETURN 1 [source_file: testcode]
                        GETPROP 1 [source_file: testcode]
                            THIS 1 [source_file: testcode]
                            STRING foo_ 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)
	at com.google.javascript.jscomp.FunctionRewriterTest.checkCompilesTo(FunctionRewriterTest.java:199)
	at com.google.javascript.jscomp.FunctionRewriterTest.testReplaceGetter1(FunctionRewriterTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FunctionRewriterTest::testReplaceSetter1
junit.framework.AssertionFailedError: 
Expected: function JSCompiler_set(JSCompiler_set_name){return function(JSCompiler_set_value){this[JSCompiler_set_name]=JSCompiler_set_value}}a.prototype.foo=JSCompiler_set("foo_");a.prototype.foo=JSCompiler_set("foo_");a.prototype.foo=JSCompiler_set("foo_");a.prototype.foo=JSCompiler_set("foo_");a.prototype.foo=JSCompiler_set("foo_")
Result: a.prototype.foo=function(v){this.foo_=v};a.prototype.foo=function(v){this.foo_=v};a.prototype.foo=function(v){this.foo_=v};a.prototype.foo=function(v){this.foo_=v};a.prototype.foo=function(v){this.foo_=v}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION JSCompiler_set 1 [source_file: expected0]
            NAME JSCompiler_set 1 [source_file: expected0]
            LP 1 [source_file: expected0]
                NAME JSCompiler_set_name 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        LP 1 [source_file: expected0]
                            NAME JSCompiler_set_value 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            EXPR_RESULT 1 [source_file: expected0]
                                ASSIGN 1 [source_file: expected0]
                                    GETELEM 1 [source_file: expected0]
                                        THIS 1 [source_file: expected0]
                                        NAME JSCompiler_set_name 1 [source_file: expected0]
                                    NAME JSCompiler_set_value 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_set 1 [source_file: expected0]
                    STRING foo_ 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_set 1 [source_file: expected0]
                    STRING foo_ 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_set 1 [source_file: expected0]
                    STRING foo_ 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_set 1 [source_file: expected0]
                    STRING foo_ 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_set 1 [source_file: expected0]
                    STRING foo_ 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                        NAME v 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        EXPR_RESULT 1 [source_file: testcode]
                            ASSIGN 1 [source_file: testcode]
                                GETPROP 1 [source_file: testcode]
                                    THIS 1 [source_file: testcode]
                                    STRING foo_ 1 [source_file: testcode]
                                NAME v 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                        NAME v 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        EXPR_RESULT 1 [source_file: testcode]
                            ASSIGN 1 [source_file: testcode]
                                GETPROP 1 [source_file: testcode]
                                    THIS 1 [source_file: testcode]
                                    STRING foo_ 1 [source_file: testcode]
                                NAME v 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                        NAME v 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        EXPR_RESULT 1 [source_file: testcode]
                            ASSIGN 1 [source_file: testcode]
                                GETPROP 1 [source_file: testcode]
                                    THIS 1 [source_file: testcode]
                                    STRING foo_ 1 [source_file: testcode]
                                NAME v 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                        NAME v 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        EXPR_RESULT 1 [source_file: testcode]
                            ASSIGN 1 [source_file: testcode]
                                GETPROP 1 [source_file: testcode]
                                    THIS 1 [source_file: testcode]
                                    STRING foo_ 1 [source_file: testcode]
                                NAME v 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                        NAME v 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        EXPR_RESULT 1 [source_file: testcode]
                            ASSIGN 1 [source_file: testcode]
                                GETPROP 1 [source_file: testcode]
                                    THIS 1 [source_file: testcode]
                                    STRING foo_ 1 [source_file: testcode]
                                NAME v 1 [source_file: testcode]


Subtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
    FUNCTION JSCompiler_set 1 [source_file: expected0]
        NAME JSCompiler_set 1 [source_file: expected0]
        LP 1 [source_file: expected0]
            NAME JSCompiler_set_name 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
            RETURN 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    LP 1 [source_file: expected0]
                        NAME JSCompiler_set_value 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        EXPR_RESULT 1 [source_file: expected0]
                            ASSIGN 1 [source_file: expected0]
                                GETELEM 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME JSCompiler_set_name 1 [source_file: expected0]
                                NAME JSCompiler_set_value 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_set 1 [source_file: expected0]
                STRING foo_ 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_set 1 [source_file: expected0]
                STRING foo_ 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_set 1 [source_file: expected0]
                STRING foo_ 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_set 1 [source_file: expected0]
                STRING foo_ 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_set 1 [source_file: expected0]
                STRING foo_ 1 [source_file: expected0]


Subtree2: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                    NAME v 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    EXPR_RESULT 1 [source_file: testcode]
                        ASSIGN 1 [source_file: testcode]
                            GETPROP 1 [source_file: testcode]
                                THIS 1 [source_file: testcode]
                                STRING foo_ 1 [source_file: testcode]
                            NAME v 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                    NAME v 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    EXPR_RESULT 1 [source_file: testcode]
                        ASSIGN 1 [source_file: testcode]
                            GETPROP 1 [source_file: testcode]
                                THIS 1 [source_file: testcode]
                                STRING foo_ 1 [source_file: testcode]
                            NAME v 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                    NAME v 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    EXPR_RESULT 1 [source_file: testcode]
                        ASSIGN 1 [source_file: testcode]
                            GETPROP 1 [source_file: testcode]
                                THIS 1 [source_file: testcode]
                                STRING foo_ 1 [source_file: testcode]
                            NAME v 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                    NAME v 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    EXPR_RESULT 1 [source_file: testcode]
                        ASSIGN 1 [source_file: testcode]
                            GETPROP 1 [source_file: testcode]
                                THIS 1 [source_file: testcode]
                                STRING foo_ 1 [source_file: testcode]
                            NAME v 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                    NAME v 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    EXPR_RESULT 1 [source_file: testcode]
                        ASSIGN 1 [source_file: testcode]
                            GETPROP 1 [source_file: testcode]
                                THIS 1 [source_file: testcode]
                                STRING foo_ 1 [source_file: testcode]
                            NAME v 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)
	at com.google.javascript.jscomp.FunctionRewriterTest.checkCompilesTo(FunctionRewriterTest.java:199)
	at com.google.javascript.jscomp.FunctionRewriterTest.testReplaceSetter1(FunctionRewriterTest.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.FunctionRewriterTest::testReplaceSetter2
junit.framework.AssertionFailedError: 
Expected: function JSCompiler_set(JSCompiler_set_name){return function(JSCompiler_set_value){this[JSCompiler_set_name]=JSCompiler_set_value}}a.prototype.foo=JSCompiler_set("foo_");a.prototype.foo=JSCompiler_set("foo_");a.prototype.foo=JSCompiler_set("foo_");a.prototype.foo=JSCompiler_set("foo_")
Result: a.prototype.foo=function(v,v2){this.foo_=v};a.prototype.foo=function(v,v2){this.foo_=v};a.prototype.foo=function(v,v2){this.foo_=v};a.prototype.foo=function(v,v2){this.foo_=v}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION JSCompiler_set 1 [source_file: expected0]
            NAME JSCompiler_set 1 [source_file: expected0]
            LP 1 [source_file: expected0]
                NAME JSCompiler_set_name 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        LP 1 [source_file: expected0]
                            NAME JSCompiler_set_value 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            EXPR_RESULT 1 [source_file: expected0]
                                ASSIGN 1 [source_file: expected0]
                                    GETELEM 1 [source_file: expected0]
                                        THIS 1 [source_file: expected0]
                                        NAME JSCompiler_set_name 1 [source_file: expected0]
                                    NAME JSCompiler_set_value 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_set 1 [source_file: expected0]
                    STRING foo_ 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_set 1 [source_file: expected0]
                    STRING foo_ 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_set 1 [source_file: expected0]
                    STRING foo_ 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_set 1 [source_file: expected0]
                    STRING foo_ 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                        NAME v 1 [source_file: testcode]
                        NAME v2 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        EXPR_RESULT 1 [source_file: testcode]
                            ASSIGN 1 [source_file: testcode]
                                GETPROP 1 [source_file: testcode]
                                    THIS 1 [source_file: testcode]
                                    STRING foo_ 1 [source_file: testcode]
                                NAME v 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                        NAME v 1 [source_file: testcode]
                        NAME v2 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        EXPR_RESULT 1 [source_file: testcode]
                            ASSIGN 1 [source_file: testcode]
                                GETPROP 1 [source_file: testcode]
                                    THIS 1 [source_file: testcode]
                                    STRING foo_ 1 [source_file: testcode]
                                NAME v 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                        NAME v 1 [source_file: testcode]
                        NAME v2 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        EXPR_RESULT 1 [source_file: testcode]
                            ASSIGN 1 [source_file: testcode]
                                GETPROP 1 [source_file: testcode]
                                    THIS 1 [source_file: testcode]
                                    STRING foo_ 1 [source_file: testcode]
                                NAME v 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    GETPROP 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]
                        STRING prototype 1 [source_file: testcode]
                    STRING foo 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    LP 1 [source_file: testcode]
                        NAME v 1 [source_file: testcode]
                        NAME v2 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        EXPR_RESULT 1 [source_file: testcode]
                            ASSIGN 1 [source_file: testcode]
                                GETPROP 1 [source_file: testcode]
                                    THIS 1 [source_file: testcode]
                                    STRING foo_ 1 [source_file: testcode]
                                NAME v 1 [source_file: testcode]


Subtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
    FUNCTION JSCompiler_set 1 [source_file: expected0]
        NAME JSCompiler_set 1 [source_file: expected0]
        LP 1 [source_file: expected0]
            NAME JSCompiler_set_name 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
            RETURN 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    LP 1 [source_file: expected0]
                        NAME JSCompiler_set_value 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        EXPR_RESULT 1 [source_file: expected0]
                            ASSIGN 1 [source_file: expected0]
                                GETELEM 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME JSCompiler_set_name 1 [source_file: expected0]
                                NAME JSCompiler_set_value 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_set 1 [source_file: expected0]
                STRING foo_ 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_set 1 [source_file: expected0]
                STRING foo_ 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_set 1 [source_file: expected0]
                STRING foo_ 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME JSCompiler_set 1 [source_file: expected0]
                STRING foo_ 1 [source_file: expected0]


Subtree2: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                    NAME v 1 [source_file: testcode]
                    NAME v2 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    EXPR_RESULT 1 [source_file: testcode]
                        ASSIGN 1 [source_file: testcode]
                            GETPROP 1 [source_file: testcode]
                                THIS 1 [source_file: testcode]
                                STRING foo_ 1 [source_file: testcode]
                            NAME v 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                    NAME v 1 [source_file: testcode]
                    NAME v2 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    EXPR_RESULT 1 [source_file: testcode]
                        ASSIGN 1 [source_file: testcode]
                            GETPROP 1 [source_file: testcode]
                                THIS 1 [source_file: testcode]
                                STRING foo_ 1 [source_file: testcode]
                            NAME v 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                    NAME v 1 [source_file: testcode]
                    NAME v2 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    EXPR_RESULT 1 [source_file: testcode]
                        ASSIGN 1 [source_file: testcode]
                            GETPROP 1 [source_file: testcode]
                                THIS 1 [source_file: testcode]
                                STRING foo_ 1 [source_file: testcode]
                            NAME v 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            GETPROP 1 [source_file: testcode]
                GETPROP 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                    STRING prototype 1 [source_file: testcode]
                STRING foo 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                LP 1 [source_file: testcode]
                    NAME v 1 [source_file: testcode]
                    NAME v2 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    EXPR_RESULT 1 [source_file: testcode]
                        ASSIGN 1 [source_file: testcode]
                            GETPROP 1 [source_file: testcode]
                                THIS 1 [source_file: testcode]
                                STRING foo_ 1 [source_file: testcode]
                            NAME v 1 [source_file: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)
	at com.google.javascript.jscomp.FunctionRewriterTest.checkCompilesTo(FunctionRewriterTest.java:199)
	at com.google.javascript.jscomp.FunctionRewriterTest.testReplaceSetter2(FunctionRewriterTest.java:113)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1968)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2271)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
